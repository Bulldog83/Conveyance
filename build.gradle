plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

minecraft {
}

repositories {
	jcenter()
	maven {
		name = "Cotton"
		url = "http://server.bbkr.space:8081/artifactory/libs-release/"
	}
	maven {
		name = "Cotton (snapshots)"
		url = "http://server.bbkr.space:8081/artifactory/libs-snapshot/"
	}
	maven {
		url = 'http://maven.sargunv.s3-website-us-west-2.amazonaws.com/'
	}
	maven {
        name = "grondag"
        url = "https://grondag-repo.appspot.com"
        credentials {
            username "guest"
            password ""
		}
    }
	maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
	maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modImplementation ("com.github.Zundrel:Wrenchable:${project.wrenchable_version}") { 
		exclude(module: "modmenu")
		exclude group: "net.fabricmc.fabric-api"
	}
    include "com.github.Zundrel:Wrenchable:${project.wrenchable_version}"
	
	modApi ("io.github.alloffabric:Artis:${project.artis_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
	
	modApi  ("io.github.cottonmc:cotton-resources:${project.cotton_resources_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
	include "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"
	
	modImplementation ("alexiil.mc.lib:libblockattributes-all:0.6.4") {
        exclude group: "net.fabricmc.fabric-api"
    }
	include "alexiil.mc.lib:libblockattributes-core:0.6.4"
    include "alexiil.mc.lib:libblockattributes-items:0.6.4"
	
	modImplementation "com.github.Vazkii:Patchouli:1.15-fabric-SNAPSHOT"
	include "com.github.Vazkii:Patchouli:1.15-fabric-SNAPSHOT"
	
	modApi "teamreborn:energy:${project.energy_version}"
	include "teamreborn:energy:${project.energy_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
